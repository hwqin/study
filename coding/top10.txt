##
## https://www.naukri.com/code360/problem-lists/top-facebook-coding-interview-questions?company%5B%5D=Facebook&sort_entity=reactions_count&sort_order=DESC
##

Two Sum
+88
40
Easy
10 mins
48k
1.7 k
You are given an array of integers 'ARR' of length 'N' and an integer Target. Your task is to return all pairs of elements such that they add up to Target.
Note:
We cannot use the element at a given index twice.
Follow Up:
Try to do this problem in O(N) time complexity. 



Maximum Subarray Sum
+80
80
Moderate
35 mins
275.8k
1.4 k
Problem statement
You are given an array 'arr' of length 'n', consisting of integers.

A subarray is a contiguous segment of an array. In other words, a subarray can be formed by removing 0 or more integers from the beginning and 0 or more integers from the end of an array.
Find the sum of the subarray (including empty subarray) having maximum sum among all subarrays.
The sum of an empty subarray is 0.

Example :
Input: 'arr' = [1, 2, 7, -4, 3, 2, -10, 9, 1]

Output: 11

Explanation: The subarray yielding the maximum sum is [1, 2, 7, -4, 3, 2].



Sort 0 1 2
+71
40
Easy
22 mins
167.5k
1.3 k
Problem statement
You have been given an integer array/list(ARR) of size 'N'. It only contains 0s, 1s and 2s. Write a solution to sort this array/list.

Note :
Try to solve the problem in 'Single Scan'. ' Single Scan' refers to iterating over the array/list just once or to put it in other words, you will be visiting each element in the array/list just once.
Detailed explanation ( Input/output format, Notes, Images )
Constraints :
1 <= T <= 10
1 <= N <= (5 * (10 ^ 5))
0 <= ARR[i] <= 2

Where 'N' is the size of the given array/list.
And, ARR[i] denotes the i-th element in the array/list.

Time Limit: 1sec 



Intersection Of Two Sorted Arrays
+20
40
Easy
10 mins
166.1k
653
Problem statement
You are given two arrays 'A' and 'B' of size 'N' and 'M' respectively. Both these arrays are sorted in non-decreasing order. You have to find the intersection of these two arrays.

Intersection of two arrays is an array that consists of all the common elements occurring in both arrays.

Note :
1. The length of each array is greater than zero.
2. Both the arrays are sorted in non-decreasing order.
3. The output should be in the order of elements that occur in the original arrays.
4. If there is no intersection present then return an empty array.


Reverse Words In A String
+77
40
Easy
10 mins
78.4k
433

Search In Rotated Sorted Array
+75
80
Moderate
30 mins
46.6k
376


Product Of Array Except Self
+29
40
Easy
26 mins
40.5k
347
Alien dictionary
+16
120
Hard
46 mins
19.8k
305
Longest Increasing Subsequence
+68
80
Moderate
30 mins
107.3k
262
Add Two Numbers As Linked Lists ll
+26
80
Moderate
10 mins
10.7k
250
Merge Intervals
+35
80
Moderate
20 mins
24.2k
224
Add Two Numbers
+38
80
Moderate
20 mins
37.2k
191
Move Zeroes To End
+22
80
Moderate
30 mins
19k
181
Best Time to Buy and Sell Stock II
+15
80
Moderate
22 mins
70.2k
174
Largest rectangle in a histogram
+24
120
Hard
25 mins
20.9k
167